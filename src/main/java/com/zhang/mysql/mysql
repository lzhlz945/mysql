mysql:
一、启动和关闭命令
 以管理员运行
 net start mysql
 net stop mysql

 mysql -h localhost -P 3306 -u root -p
 mysql  -u root -p

二、规范：
1、去除别名 ：SELECT DISTINCT job_id '编号' FROM employees;

2、CONCAT
 CONCAT(str1,str2,...) 连接列名，字符串连接
 SELECT CONCAT(first_name,last_name) as 姓名 FROM employees;

3、DESC
 查看表结构
 DESC 表明;

4、IFNULL()
 SELECT CONCAT(first_name,IFNULL(commission_pct,0.0),last_name) AS ABVCFF
 FROM employees;  IFNULL(字段名,null值替换值)

5、ESCAPE
 SELECT last_name,salary
 FROM employees
 WHERE last_name LIKE '_a_%' ESCAPE 'a'; 相当于转义字符 '_\_%'

6、<=>
 既可以判断null值，也可以判断数值

7、查询不存在的计算值
 SELECT last_name,(1+IFNULL(commission_pct,0))*12*salary as a
 FROM employees
 order BY  a ;

8、根据字段为字符串排序
 SELECT last_name,(1+IFNULL(commission_pct,0))*12*salary as a
 FROM employees
 order BY  LENGTH(last_name);

-----------------------------------------------------------------------------

二、mysql函数

1、函数的类型：
 字符函数、数学函数、日期函数、其他函数、流程控制函数

2、字符函数
 1个汉字占3个字节 utf
①Length() 计算字符串长度

②concat() 连接字段，拼接

③UPPER、LOWER大小写转换（函数支持嵌套）
 SELECT CONCAT(UPPER(first_name),LOWER(last_name)) as 姓名 FROM	employees;

④IFNULL() 判断是否为空 参数1：字段名，参数2：为空替换值

⑤ESCAPE LIKE '_a_%' ESCAPE 'a'; 相当于转义

⑥<=> 可以判断字段值是否是null值，也可以判断数值

⑦substr() 截取字符串 索引从1 开始
 select substr("1234",2); 234 第二个到最后一个
 select substr("1234",2,2);23 第三个参数是个数的意思
综合练习sql：
 SELECT CONCAT(UPPER(SUBSTR(first_name,1,1)),LOWER(SUBSTR(first_name,2))) 姓名 FROM employees;

⑧instr() 返回第一次出现的索引
 SELECT INSTR("zhlgmdqq","z"); 1 如果不存在返回0

⑨trim() 清除空格
 SELECT TRIM("   www       "); www
 可以清空前后指定的字符 SELECT TRIM('a' FROM "aaaa111222aaaa"); from

⑩lpad() rpad() 左右填充
 参数1：是填充的目标 参数2：填充后大小个数 参数3：需要左（右）填充的target
 SELECT LPAD("aaaabbb",12,123);
 SELECT RPAD("aaaabbb",12,123);



⑪replace() 替换
 1表示需要被替换的内容 2表示替换后的内容select replace("str","s","2"); 2tr

 --------------------------------------------------------------------------------------

 数学函数：
 ①round() 四舍五入 类似加绝对值
 round(-1.5) -2
 round(-1.5251,2)  -1.53 可以对小数进行四舍五入

②ceil() 向上取整
 SELECT ceil(-1.9) -1 SELECT ceil(1.1) 2

③floor() 向下取整
 SELECT floor(-1.223) -2  SELECT floor(1.9) 1

④#TRUNCATE(参数1,参数2) 截取 参数1 截取目标 参数2 截取小数长度
 SELECT TRUNCATE(1.499,2) 1.49

 ⑤mod() 取模，符号和被除数一致
 mod(10,3) 1

——————————————————————————————————————————————————————————————————————————————
日期函数

①now() 返回当前时间带所有信息

②curDate() 返回时间只带日期

③curTime() 返回时间不带日期

④只返回特点的时间截取
 SELECT YEAR(NOW()) 返回年
 SELECT MONTH(NOW()) 返回月
 SELECT MONTHName(NOW()) 返回月为英文
 SELECT day(hiredate) FROM employees; 返回天
 SELECT MINUTE(now()); 返回分钟
 SELECT SECOND(now()); 返回秒

⑤str_to_Date
 SELECT hiredate FROM employees WHERE hiredate='1992-4-3'
 #STR_TO_DATE(str,format)
 SELECT hiredate FROM employees WHERE hiredate=STR_TO_DATE('4-3 1992','%c-%d %Y')

⑥date_Format
 SELECT DATE_FORMAT('1994/04/01','%Y年-%m月%d日')

------------------------------------------------------------------------------
流程控制函数

①SELECT if(21>22,"大","小");  三目运算
 SELECT last_name,IFNULL(commission_pct,"空"),if(commission_pct is null,"没有奖金，难受","有奖金，开心") 奖金情况 FROM employees;

②case
 case 要判断的字段或表达式
 when 常量1 then 要显示的值1或语句1;
 when 常量2 then 要显示的值2或语句2;
 else 常量n then 要显示的值n或语句n;
 end

 SELECT salary, CASE                 case和不跟字段或表达式
 	WHEN  salary>10000 THEN '中'
 	WHEN  salary>5000 THEN '良'
 	WHEN  salary>2000 THEN '优'
 	ELSE '无'
   END as 奖金等级
  FROM employees;

  SELECT salary as 原始工资, department_id 部门编号 ,case department_id
  when 10 then salary*1.1
  when 20 then salary*1.2
  when 30 then salary*1.3
  else salary
  end as 新工资
  FROM employees;

多行函数

sum 、avg min max count  都不算null
SELECT COUNT(salary) FROM employees;

SELECT COUNT(DISTINCT salary) FROM employees;

count(常量) count(*)效果一样

效率：
myisam count(*) 效率高
innodb count(*) 然后count(1) 最慢为count(常量)

dateDiff
日期计算差值
SELECT DATEDIFF(NOW(),'1994-05-11')

分组查询

#查询部门人数大于2的部门
SELECT count(*)  FROM employees
GROUP BY department_id
HAVING count(*) >2

查询
#有奖金的最大工资> 1200 的工位的名称
SELECT max(salary)
FROM employees
WHERE commission_pct is not NULL
GROUP BY job_id
HAVING max(salary) >1200

#查询部门编号大于102 其各部门最低工资的信息
SELECT manager_id ,min(salary)
FROM employees
-- WHERE salary>5000

GROUP BY manager_id
HAVING manager_id>102 and min(salary)>5000

支持别名

CAST 转换函数


CAST函数语法规则是：Cast(字段名 as 转换的类型 )，其中类型可以为：

CHAR[(N)] 字符型
DATE 日期型
DATETIME 日期和时间型
DECIMAL float型
SIGNED int
TIME 时间型

SELECT round(-1.5241,2)
SELECT TRUNCATE(-1.55562,2)
SELECT CAST(1.566315 as DECIMAL(10,2))

SELECT cast("2015-11-03 15:31:26" as time) as date;
SELECT cast("2015-11-03 15:31:26" as date) as date;
SELECT cast("2015-11-03 15:31:26" as signed) as date;
SELECT cast("20151103153126" as CHAR) as date;
num:20

select cast(num as decimal(10, 2)) as num from table2
#decimal(10,2)可以存储8位整数2位小数的数字.

----------------------------------------------------------------------

sql 连接查询 99语法

语法：
 select 查询列表
 from 表1 别名 【连接类型】
 join 表2 别名
 on 连接条件

 分类：
 内连接：inner

 外连接：
        左外：left 【outer】
        右外：right
        全外：full

 交叉连接：cross

 SELECT e.department_id,d.department_id
  FROM  employees e RIGHT JOIN departments d
  on  e.department_id=d.department_id
  WHERE e.department_id is NULL                                                                                                                                                                                                          -=\


cross连接 其实就是实现了99语法的笛卡尔乘及

————————————————————————————————————————————————————————————————————————————————————
子查询：

 一、where和having后面
   1、标量子查询=单行子查询
   2、列子查询=多行子查询=一列多行
   3、标量子查询，一般搭配单行操作符使用：
      > < = <> >= <=;
      列子查询，一般搭配多行操作符使用
      in、any/some、all


  二、列子
   ①、#查询abel的工资（作为子查询）
     SELECT salary FROM employees
     WHERE last_name='abel';

     #查询工资比abel高的员工
     SELECT last_name,salary
     FROM employees
     WHERE salary > (SELECT salary FROM employees
     WHERE last_name='abel')

   ②#143号员工工资 --子查询
    SELECT salary
    FROM employees
    WHERE employee_id=143

    #job_id=141的员工 --子查询
    SELECT job_id
    FROM employees
    WHERE employee_id=141

    #与job_id=141的员工的job_id相同，salary大于43号员工工资
    SELECT last_name,job_id,salary
    FROM employees
    WHERE job_id=(
     SELECT job_id
     FROM employees
     WHERE employee_id=141
    ) and
    salary > (
     SELECT salary
    FROM employees
    WHERE employee_id=143
    );
 ③#四 查询最低工资大于50号部门最低工资的部门id和最低工资 (having的后面跟子查询)
  SELECT min(salary) 最低工资
  FROM employees
  WHERE department_id=50

  SELECT department_id,min(salary)
  FROM employees
  GROUP BY department_id
  HAVING min(salary) >(
     SELECT min(salary)
     FROM employees
     WHERE department_id=50
  )

---------------------------------------------------------------------------------------------------------

列子查询
 多行操作符
 all 相当于max any相当于min

 #1、返回 location_id是1400或1700的部门中的所有员工姓名
 #第一种子查询
 SELECT location_id
 WHERE location_id=1400 or location_id=1700

 #第二种子查询
 SELECT  DISTINCT department_id
 FROM departments
 WHERE location_id in (1400,1700)

 #第一种
 SELECT e.last_name,d.location_id
 FROM departments d JOIN employees e
 on e.department_id =d.department_id
 WHERE d.location_id in (
 SELECT location_id
 FROM locations
 WHERE location_id=1400 or location_id=1700
 );

 #第二种
 SELECT last_name
 FROM employees
 WHERE department_id in
 (
 SELECT department_id
 FROM departments
 WHERE location_id in (1400,1700)
 );

 ----------------------------------------------------------------------------------
 行子查询

 #查询员工编号最小且工资最高的员工信息

 SELECT * from employees
 #工资最高
 SELECT max(salary) FROM employees
 #编号最小
 SELECT min(employee_id) FROM employees

 1、第一种
 SELECT employee_id,last_name,salary
 FROM employees
 WHERE employee_id=(SELECT min(employee_id) FROM employees)
 UNION
 SELECT employee_id,last_name,salary
 FROM employees
 WHERE salary=(SELECT max(salary) FROM employees)

 2、第二种
 SELECT employee_id,last_name,salary
 FROM employees
 WHERE employee_id=(SELECT min(employee_id) FROM employees)
 and
 salary=(SELECT max(salary) FROM employees)

 3、行子查询
 SELECT * FROM employees
 WHERE (employee_id,salary)=(
 SELECT min(employee_id),max(salary)
 FROM employees
 )

--------------------------------------------------------------------------

放在select后面的子查询

		#查询每个部门的员工个数

		#1、使用子查询的结果
		SELECT d.*,(
		SELECT count(*) FROM employees e
		WHERE d.department_id=e.department_id
		) 个数
		FROM departments d

		#2、使用连接的结果
		SELECT d.*,count(e.department_id) 个数
		FROM departments d LEFT join employees e
		on d.department_id=e.department_id

		GROUP BY d.department_id

--------------------------------------------------------------------------------------
from后面的查询 连接查询

		#查询每个部门的平均工资的工资等级
		SELECT CAST(avg(salary) as DECIMAL(10,2))
		FROM employees
		GROUP BY department_id ;

   一、第一种属于92语法

		SELECT s.d 部门编号,s.salary 部门平均工资,g.grade_level 工资等级
		FROM job_grades g JOIN (
		SELECT department_id d,
		CAST(avg(salary) as DECIMAL(10,2)) 'salary'
		FROM employees
		GROUP BY department_id
		) s
		WHERE s.salary BETWEEN g.lowest_sal and g.highest_sal
		order by s.salary desc;
   二、第二种属于99语法on后面跟条件
			SELECT s.d 部门编号,s.salary 部门平均工资,g.grade_level 工资等级
		FROM job_grades g JOIN (
		SELECT department_id d,
		CAST(avg(salary) as DECIMAL(10,2)) 'salary'
		FROM employees
		GROUP BY department_id
		) s
		on s.salary BETWEEN g.lowest_sal and g.highest_sal
		ORDER BY s.salary desc

------------------------------------------------------------------------------------


exist(完整语句) 相关联查询

#查询有员工的部门名,相关子查询

SELECT DISTINCT department_name
FROM departments d
WHERE EXISTS(
SELECT * FROM employees e
WHERE d.department_id=e.department_id)



#用in实现
SELECT DISTINCT department_id,last_name FROM employees
-- WHERE department_id in(
-- SELECT DISTINCT department_id
-- FROM departments
-- )
GROUP BY department_id
HAVING department_id
in(
SELECT DISTINCT department_id
FROM departments
)

--------------------------------------------------------------------------------------------
子查询练习

一、#查询和zlotkey相同部门的员工姓名和工资

 -- 子查询
 SELECT department_id FROM employees
 WHERE last_name='zlotkey';

 SELECT last_name,salary FROM employees
 WHERE department_id=(
 SELECT department_id FROM employees
 WHERE last_name='zlotkey'
 );


#二、 查询工资比公司平均工资高的员工的员工号，姓名和工资
 SELECT TRUNCATE(avg(salary),2) FROM employees
 SELECT cast(avg(salary) as DECIMAL(10,2)) FROM employees

 SELECT employee_id,last_name,salary
 FROM employees
 WHERE salary>(
  SELECT cast(avg(salary) as DECIMAL(10,2))
  FROM employees
  );

#三、查询各部门工资比本部门平均工资高的员工的工号和姓名
   SELECT cast(avg(salary) as DECIMAL(10,2)),department_id
	 FROM employees GROUP BY department_id

   SELECT e.last_name,a.avg,e.salary,e.department_id FROM
   ( SELECT cast(avg(salary) as DECIMAL(10,2)) 'avg',department_id
  	 FROM employees GROUP BY department_id
   ) a
   JOIN employees e
	 on a.department_id=e.department_id
	 WHERE e.salary>a.avg

	 SELECT avg(salary) FROM employees
	 WHERE department_id=100



 #四、查询和姓名中包含字母u的员工在相同部门的员工的员工号和姓名

   SELECT department_id FROM employees WHERE last_name LIKE '%u%'

   SELECT DISTINCT department_id FROM employees
   WHERE last_name LIKE '%u%' ORDER BY department_id

   SELECT last_name,department_id
   FROM employees
   WHERE department_id in(
   SELECT DISTINCT department_id FROM employees
   WHERE last_name LIKE '%u%'
   )

 #五、查询在部门的location_id 为1700的部门工作的员工号
   SELECT department_id FROM departments WHERE location_id=1700

   SELECT last_name,employee_id,department_id
   FROM employees
   WHERE department_id in(
   SELECT department_id FROM departments WHERE location_id=1700
   )


 #六、查询管理者是King的员工姓名和工资

	 SELECT employee_id FROM employees
	 WHERE last_name ='k_ing'

	 SELECT last_name,salary,manager_id FROM employees
	 WHERE manager_id in(
	  SELECT employee_id FROM employees
	  WHERE last_name ='k_ing'
	 )

 #七、查询工资最高的员工姓名。要求first_name和last_name显示为一列

    SELECT CONCAT(first_name,last_name) 姓名,max(salary)
    from employees














































































